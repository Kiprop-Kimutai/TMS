{"version":3,"sources":["webpack:///./src/app/firmware/can-deactivate-guard.service.ts","webpack:///./src/app/firmware/firmware-module.ts","webpack:///./src/app/firmware/firmware-routing.module.ts","webpack:///./src/app/firmware/firmware-service.ts","webpack:///./src/app/firmware/newpos/newpos-devices.component.css","webpack:///./src/app/firmware/newpos/newpos-devices.component.html","webpack:///./src/app/firmware/newpos/newpos-devices.component.ts","webpack:///./src/app/firmware/saral/saral-devices.component.css","webpack:///./src/app/firmware/saral/saral-devices.component.html","webpack:///./src/app/firmware/saral/saral-devices.component.ts","webpack:///./src/app/models/firmware_files.ts"],"names":[],"mappings":"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","file":"app-firmware-firmware-module.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {CanDeactivate} from \"@angular/router\";\r\nimport {Observable} from 'rxjs';\r\nexport interface canDeactivateComponent{\r\n    canDeactivate():Promise<boolean> | Observable<boolean> | boolean;\r\n\r\n    \r\n}\r\n@Injectable()\r\nexport class CanDeactivateGuard implements CanDeactivate<canDeactivateComponent> {\r\n\r\n    canDeactivate(component:canDeactivateComponent):Promise<boolean> | Observable<boolean> |boolean{\r\n        return component.canDeactivate ? component.canDeactivate() :true;\r\n    }\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {FirmwareRoutesModule} from './firmware-routing.module';\r\nimport {NewposDevicesComponent} from './newpos/newpos-devices.component';\r\nimport {SaralDevicesComponent} from './saral/saral-devices.component';\r\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {CanDeactivateGuard} from './can-deactivate-guard.service';\r\nimport {FirmwareService} from './firmware-service';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {CommonModule} from '@angular/common';\r\n@NgModule({\r\n    imports:[FirmwareRoutesModule,FormsModule,ReactiveFormsModule,\r\n    MatCardModule,MatInputModule,MatButtonModule,MatFormFieldModule,FlexLayoutModule,\r\n    MatProgressBarModule,CommonModule],\r\n    declarations:[NewposDevicesComponent,SaralDevicesComponent],\r\n    exports:[],\r\n    entryComponents:[],\r\n    providers:[CanDeactivateGuard,FirmwareService]\r\n})\r\nexport class FirmwareModule{}","import {RouterModule,Routes, Router} from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\nimport {SaralDevicesComponent} from './saral/saral-devices.component';\r\nimport {NewposDevicesComponent} from './newpos/newpos-devices.component';\r\nimport {CanDeactivateGuard} from './can-deactivate-guard.service';\r\nconst routes:Routes = [\r\n    {\r\n        path:'saral-firmware',\r\n        canDeactivate:[CanDeactivateGuard],\r\n        component:SaralDevicesComponent\r\n    },\r\n    {\r\n        path:'newpos-firmware',\r\n        canDeactivate:[CanDeactivateGuard],\r\n        component:NewposDevicesComponent\r\n    },\r\n    {\r\n        path:'',\r\n        canDeactivate:[CanDeactivateGuard],\r\n        redirectTo:'saral-firmware',\r\n        pathMatch:'full'\r\n    }\r\n]\r\nexport const FirmwareRoutesModule:ModuleWithProviders = RouterModule.forChild(routes);","import {Injectable} from '@angular/core';\r\nimport {HttpClient,HttpHeaders,HttpEvent} from '@angular/common/http';\r\nimport {FirmwareFiles} from '../models/firmware_files';\r\n@Injectable()\r\nexport class FirmwareService{\r\n    constructor(private http:HttpClient){\r\n\r\n    }\r\n\r\n    uploadFirmware(firmware:FirmwareFiles){\r\n        let httpHeaders =new HttpHeaders({'Content-Type':'application/json'})\r\n        //return this.http.post('/api/uploadFiles',firmware,{headers:httpHeaders});\r\n        //return this.http.post('http://localhost:3000/api/uploadFiles',firmware,{headers:httpHeaders});\r\n        return this.http.post('http://localhost:3000/firmware',firmware,{headers:httpHeaders});\r\n\r\n }\r\n\r\n uploadFile(file:File,firmware:FirmwareFiles){\r\n     const formData:any = new FormData();\r\n     formData.append(\"uploads[]\",file,file.name)\r\n     //formData.append(\"jonah\",\"kiprop\");\r\n     ///formData.append(\"details\",firmware);\r\n     for(let key in firmware){\r\n        console.log(key);\r\n        formData.append(key,firmware[key]);\r\n     }\r\n     let httpHeaders = new HttpHeaders({/*'Content-Type':'multipart/form-data'*/});\r\n     //return this.http.post('http://localhost:3000/api/uploadfirmware',formData,{headers:httpHeaders,reportProgress:true,observe:'events'});\r\n     //return this.http.post('http://localhost:3000/uploadFile',formData,{headers:httpHeaders,reportProgress:true,observe:'events'});\r\n     return this.http.post('http://localhost:2000/api/firmware_routes/uploadFile',formData,{headers:httpHeaders,reportProgress:true,observe:'events'});\r\n\r\n }\r\n}","module.exports = \".body{\\r\\n    min-height:100vh;\\r\\n}\\r\\nmat-form-field{\\r\\n    width:100%;\\r\\n}\\r\\nform{\\r\\n    /*background-color: aliceblue;*/\\r\\n}\\r\\nmat-card{\\r\\n    margin:5px;\\r\\n}\\r\\n@media only screen and (max-device-width:599px){\\r\\n    mat-form-field{\\r\\n        width:100%;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<div class = \\\"body\\\">\\r\\n    <mat-card>\\r\\n  <input style = \\\"display: none;\\\" type = \\\"file\\\" (change) = \\\"onFileUpload($event)\\\" #fileInputHandler/>\\r\\n  <form [formGroup] = \\\"firmwareFormGroup\\\" fxFlexOffset.gt-xs = \\\"30%\\\" fxFlex.gt-xs = \\\"40%\\\">\\r\\n      <div>\\r\\n          <button style = \\\"margin-left:40%;background-color: teal\\\"mat-raised-button  type = \\\"button\\\" (click) = \\\"fileInputHandler.click()\\\">select file</button>\\r\\n      </div>\\r\\n    <div>\\r\\n        <label for = \\\"filename\\\">filename</label><br>\\r\\n        <mat-form-field>\\r\\n            <input class = \\\"input\\\" matInput type = \\\"text\\\" formControlName = \\\"filename\\\" [(ngModel)] = \\\"uploadedFirmware.filename\\\" name = \\\"filename\\\"/>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label for = \\\"type\\\">type</label><br>\\r\\n        <mat-form-field>\\r\\n           <input class = \\\"input\\\" matInput type = \\\"text\\\" formControlName = \\\"type\\\" [(ngModel)] = \\\"uploadedFirmware.type\\\" name = \\\"type\\\"/>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label for = \\\"version\\\">version</label><br>\\r\\n        <mat-form-field>\\r\\n         <input class = \\\"input\\\" matInput type = \\\"text\\\" placeholder = \\\"1.2.1\\\" formControlName = \\\"version\\\"  [(ngModel)] = \\\"uploadedFirmware.version\\\" required/>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label for = \\\"model\\\">device model</label><br>\\r\\n        <mat-form-field>\\r\\n        <input class = \\\"input\\\" matInput type = \\\"text\\\" placeholder = \\\"saral infotech\\\" formControlName = \\\"model\\\" [(ngModel)] = \\\"uploadedFirmware.model\\\" required/>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n        <button [disabled] = \\\"firmwareFormGroup.status === 'INVALID'\\\" mat-raised-button style = \\\"background-color:teal;\\\" (click) = \\\"uploadFile()\\\">upload</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n</div>\"","import {Component,OnInit,ElementRef,ViewChild} from '@angular/core';\r\nimport {DeviceFirmware} from '../../models/device-firmware';\r\nimport {FirmwareFiles} from '../../models/firmware_files';\r\nimport {FormGroup,FormControl,Validators,FormBuilder} from '@angular/forms';\r\nimport {DialogService} from '../../dialog.service';\r\nimport {FirmwareService} from '../firmware-service';\r\n@Component({\r\n    selector:'newpos-devices',\r\n    templateUrl:'./newpos-devices.component.html',\r\n    styleUrls:['./newpos-devices.component.css']\r\n})\r\nexport class NewposDevicesComponent implements OnInit{\r\n    @ViewChild('fileInput') fileInput:ElementRef;\r\n    uploadedFile:File = null;\r\n    uploadedFirmware:FirmwareFiles = new FirmwareFiles('','','','','');\r\n    firmwareFormGroup:FormGroup;\r\n    constructor(private fb:FormBuilder,private dialogService:DialogService,private firmwareService:FirmwareService){\r\n        this.createForm();\r\n    }\r\n    createForm(){\r\n        this.firmwareFormGroup = new FormGroup({\r\n            filename:new FormControl(this.uploadedFirmware.filename,[Validators.required]),\r\n            type:new FormControl(this.uploadedFirmware.type,[Validators.required]),\r\n            version:new FormControl(this.uploadedFirmware.model,[Validators.required]),\r\n            model:new FormControl(this.uploadedFirmware.model,[Validators.required])\r\n\r\n        })\r\n    }\r\n\r\n    clearFile(){\r\n        this.firmwareFormGroup.get('avatar').setValue(null);\r\n        this.fileInput.nativeElement.value = \"\";\r\n    }\r\n    uploadFile(){\r\n        console.log(\"Will upload file\");\r\n        //this.firmwareService.uploadFirmware(this.uploadedFirmware).subscribe(res =>{console.log(res)});\r\n    }\r\n    onFileUpload(event){\r\n        let reader = new FileReader();\r\n        console.log(event.target.files[0]);\r\n        this.uploadedFile = <File>event.target.files[0];\r\n        this.firmwareFormGroup.setValue({\r\n            filename:this.uploadedFile.name,\r\n            type:this.uploadedFile.type,\r\n            version:'',\r\n            model:''\r\n        })\r\n        reader.readAsDataURL(this.uploadedFile);\r\n        reader.onload = () =>{\r\n            console.log(reader.result.split(',')[1]);\r\n            this.uploadedFirmware.md5sum = reader.result.split(',')[1];\r\n        }\r\n      \r\n    }\r\n    canDeactivate(){\r\n        if(JSON.stringify(new FirmwareFiles('','','','','')) == JSON.stringify(this.uploadedFirmware)){\r\n            return true;\r\n        }\r\n        return this.dialogService.confirm('Are you sure to discard?');\r\n  \r\n    }\r\n    \r\n    ngOnInit(){\r\n\r\n    }\r\n}","module.exports = \".body{\\r\\n    min-height:100vh;\\r\\n}\\r\\nmat-form-field{\\r\\n    width:100%;\\r\\n}\\r\\nform{\\r\\n    /*background-color: aliceblue;*/\\r\\n}\\r\\nmat-card{\\r\\n    margin:5px;\\r\\n}\\r\\ndiv ~ mat-card {\\r\\n    opacity: 0.2;\\r\\n}\\r\\n.mat-progress{\\r\\n    -webkit-tap-highlight-color: transparent;\\r\\n    margin-top:-250px;\\r\\n    z-index:2;   \\r\\n\\r\\n}\\r\\nspan ~ p{\\r\\n    opacity: 0.2;\\r\\n    background-color: yellow;\\r\\n}\\r\\n@media only screen and (max-device-width:599px){\\r\\n    mat-form-field{\\r\\n        width:100%;\\r\\n        \\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<!--<div class = \\\"body\\\">\\r\\n    <mat-card>\\r\\n  <input style = \\\"display: none;\\\" type = \\\"file\\\" (change) = \\\"onFileUpload($event)\\\" #fileInputHandler/>\\r\\n      <div>\\r\\n          <button style = \\\"margin-left:40%;background-color: teal\\\"mat-raised-button  type = \\\"button\\\" (click) = \\\"fileInputHandler.click()\\\">select file</button>\\r\\n      </div>\\r\\n</mat-card>\\r\\n</div>-->\\r\\n<div class = \\\"body\\\">\\r\\n    <mat-card [hidden] = \\\"!hideProgress\\\" [ngStyle] = \\\"{opacity:enableOpacity == true ? 0.1 :1}\\\">\\r\\n  <input style = \\\"display: none;\\\" type = \\\"file\\\" (change) = \\\"onFileUpload($event)\\\" #fileInputHandler/>\\r\\n  <form [formGroup] = \\\"firmwareFormGroup\\\" fxFlexOffset.gt-xs = \\\"30%\\\" fxFlex.gt-xs = \\\"40%\\\">\\r\\n      <div>\\r\\n          <button style = \\\"margin-left:40%;background-color: teal\\\"mat-raised-button  type = \\\"button\\\" (click) = \\\"fileInputHandler.click()\\\">select file</button>\\r\\n      </div>\\r\\n    <div>\\r\\n        <label for = \\\"filename\\\">filename</label><br>\\r\\n        <mat-form-field>\\r\\n            <input class = \\\"input\\\" matInput type = \\\"text\\\" formControlName = \\\"filename\\\" [(ngModel)] = \\\"uploadedFirmware.filename\\\" name = \\\"filename\\\" disabled/>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label for = \\\"type\\\">type</label><br>\\r\\n        <mat-form-field>\\r\\n           <input class = \\\"input\\\" matInput type = \\\"text\\\" formControlName = \\\"type\\\" [(ngModel)] = \\\"uploadedFirmware.type\\\" name = \\\"type\\\"/>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label for = \\\"version\\\">version</label><br>\\r\\n        <mat-form-field>\\r\\n         <input class = \\\"input\\\" matInput type = \\\"text\\\" placeholder = \\\"1.2.1\\\" formControlName = \\\"version\\\"  [(ngModel)] = \\\"uploadedFirmware.version\\\" required/>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n        <label for = \\\"model\\\">device model</label><br>\\r\\n        <mat-form-field>\\r\\n        <input class = \\\"input\\\" matInput type = \\\"text\\\" placeholder = \\\"saral infotech\\\" formControlName = \\\"model\\\" [(ngModel)] = \\\"uploadedFirmware.model\\\" required/>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n        <button [disabled] = \\\"firmwareFormGroup.status === 'INVALID'\\\" mat-raised-button style = \\\"background-color:teal;\\\" (click) = \\\"uploadFirmware()\\\">upload</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n<div [hidden] = \\\"hideProgress\\\" class = \\\"mat-progress\\\">\\r\\n    <!--<mat-progress-bar color = \\\"primary\\\" mode=\\\"determinate\\\" value=\\\"40\\\"></mat-progress-bar> -->\\r\\n    <mat-progress-bar\\r\\n          class=\\\"example-margin\\\"\\r\\n          [color]=\\\"color\\\"\\r\\n          [mode]=\\\"mode\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n          [bufferValue]=\\\"bufferValue\\\">\\r\\n      </mat-progress-bar>\\r\\n      <span style = \\\"display:block;margin-left:40%\\\">progress {{value}} %</span>\\r\\n    </div>\\r\\n</div>\"","import {Component,OnInit} from '@angular/core';\r\nimport {FirmwareFiles} from '../../models/firmware_files';\r\nimport {FormGroup,FormControl,Validators,FormBuilder} from '@angular/forms';\r\nimport {DialogService} from '../../dialog.service';\r\nimport {FirmwareService} from '../firmware-service';\r\nimport {HttpEventType} from '@angular/common/http';\r\n@Component({\r\n    selector:'saral-devices',\r\n    templateUrl:'./saral-devices.component.html',\r\n    styleUrls:['./saral-devices.component.css']\r\n})\r\nexport class SaralDevicesComponent implements OnInit{\r\n    uploadedFile:File;\r\n    uploadedFirmware:FirmwareFiles = new FirmwareFiles('','','','','');\r\n    firmwareFormGroup:FormGroup;\r\n    color = 'primary';\r\n    mode = 'determinate';\r\n    value:number = 0;\r\n    bufferValue :number= 100;\r\n    hideProgress:boolean = true;\r\n    enableOpacity:boolean = false;\r\n    constructor(private firmwareService:FirmwareService){\r\n        this.createForm();\r\n    }\r\n\r\n    createForm(){\r\n        this.firmwareFormGroup = new FormGroup({\r\n            filename:new FormControl(this.uploadedFirmware.filename,[Validators.required]),\r\n            type:new FormControl(this.uploadedFirmware.type,[Validators.required]),\r\n            version:new FormControl(this.uploadedFirmware.model,[Validators.required]),\r\n            model:new FormControl(this.uploadedFirmware.model,[Validators.required])\r\n        })\r\n    }\r\n    onFileUpload(event){\r\n        this.uploadedFile = <File>event.target.files[0];\r\n        this.firmwareFormGroup.setValue({\r\n            filename:this.uploadedFile.name,\r\n            type:this.uploadedFile.type,\r\n            version:'',\r\n            model:''\r\n        })\r\n\r\n    }\r\n\r\n    uploadFirmware(){\r\n        this.hideProgress = false;\r\n        this.enableOpacity = true;\r\n        this.uploadedFirmware.md5sum = \"\";\r\n        this.value = 0;\r\n        this.firmwareService.uploadFile(this.uploadedFile,this.uploadedFirmware).subscribe(event =>{\r\n            if(event.type === HttpEventType.UploadProgress){\r\n                this.value = Math.round(event.loaded/event.total *100);\r\n                console.log(\"upload progress \" +Math.round(event.loaded/event.total *100) + '%');\r\n            }\r\n            else if(event.type === HttpEventType.Response){\r\n                console.log(event.body);\r\n                this.hideProgress = true;\r\n                this.enableOpacity = false;\r\n            }\r\n        })\r\n        /*this.firmwareService.uploadFirmware(this.uploadedFirmware).subscribe(res =>{\r\n            console.log(res);\r\n            this.firmwareService.uploadFile(this.uploadedFile,this.uploadedFirmware).subscribe(event =>{\r\n                if(event.type === HttpEventType.UploadProgress){\r\n                    this.value = Math.round(event.loaded/event.total *100);\r\n                    console.log(\"upload progress \" +Math.round(event.loaded/event.total *100) + '%');\r\n                }\r\n                else if(event.type === HttpEventType.Response){\r\n                    console.log(event.body);\r\n                    this.hideProgress = true;\r\n                    this.enableOpacity = false;\r\n                }\r\n            })\r\n        });*/\r\n\r\n    }\r\n    ngOnInit(){\r\n        \r\n    }\r\n}","export class FirmwareFiles{\r\n    constructor(public filename:string,public type:string,public version:string,public model:string,public md5sum:string){\r\n\r\n    }\r\n}"],"sourceRoot":""}